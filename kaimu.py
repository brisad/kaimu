#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.5 on Sun Dec  8 19:15:22 2013

import wx
import zmq
from random import randrange
from time import sleep
from threading import Thread


class Publisher(Thread):
    def __init__(self):
        super(Publisher, self).__init__()
        self.context = zmq.Context()
        self.socket = self.context.socket(zmq.PUB)
        self.socket.bind("tcp://*:5556")

    def run(self):
        while True:
            sleep(1)
            s = ",".join("file %d" % x for x in range(randrange(1, 12)))
            self.socket.send(s)


class FileItem(object):
    def __init__(self, name, size, hosting_device):
        self.name = name
        self.size = size
        self.hosting_device = hosting_device


class FileList(object):
    def __init__(self, listener, items=None):
        self.listener = listener
        self.items = items

    def __iter__(self):
        for item in self.items:
            yield item

    def set_items(self, items):
        self.listener(items)
        self.items = items


class MainFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MainFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.notebook = wx.Notebook(self, -1, style=0)
        self.notebook_pane = wx.Panel(self.notebook, -1)
        self.filelist_ctrl = wx.ListCtrl(self.notebook_pane, -1, style=wx.LC_REPORT | wx.SUNKEN_BORDER)

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MainFrame.__set_properties
        self.SetTitle("Kaimu")
        self.SetSize((345, 223))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MainFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2.Add(self.filelist_ctrl, 1, wx.EXPAND, 0)
        self.notebook_pane.SetSizer(sizer_2)
        self.notebook.AddPage(self.notebook_pane, "Available files")
        sizer_1.Add(self.notebook, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade

    def _populate_filelist(self, files):
        self.filelist_ctrl.datamap = {}
        self.filelist_ctrl.ClearAll()
        self.filelist_ctrl.InsertColumn(0, "Filename", width=-1)

        for idx, item in enumerate(files):
            _id = wx.NewId()
            self.filelist_ctrl.InsertStringItem(idx, item)
            self.filelist_ctrl.datamap[_id] = item
            self.filelist_ctrl.SetItemData(idx, _id)


# end of class MainFrame
class MainApp(wx.App):
    def OnInit(self):
        self._init_zmq()

        wx.InitAllImageHandlers()
        main_frame = MainFrame(None, -1, "")
        self.SetTopWindow(main_frame)
        main_frame.Show()

        self.filelist = FileList(main_frame._populate_filelist)
        self._start_timer()
        return 1

    def OnTimer(self, event):
        try:
            files = self.subscriber.recv(zmq.DONTWAIT)
            self.filelist.set_items(files.split(","))
        except zmq.ZMQError:
            return

    def _init_zmq(self):
        context = zmq.Context()
        socket = context.socket(zmq.SUB)
        socket.connect("tcp://localhost:5556")
        socket.setsockopt(zmq.SUBSCRIBE, "")
        self.subscriber = socket

    def _start_timer(self):
        timerid = wx.NewId()
        self.timer = wx.Timer(self, timerid)
        wx.EVT_TIMER(self, timerid, self.OnTimer)
        self.timer.Start(150, False)


# end of class MainApp

if __name__ == "__main__":
    p = Publisher()
    p.daemon = True
    p.start()

    Kaimu = MainApp(0)
    Kaimu.MainLoop()
